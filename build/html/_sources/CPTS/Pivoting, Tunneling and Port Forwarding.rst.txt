########################################
Pivoting, Tunneling and Port Forwarding
########################################

*****************
Description
*****************
The process of using various methods outlined in this note to access hosts, networks and services not normally accessible from the public network.

*************************
Port forwarding with SSH
*************************

After scanning a host, we notice that the Mysql port is closed, and is only accessible from the localhost.  By leveraging our access to SSH we can forward requests via an SSH tunnel.

Example 1:  Creating a tunnel with local port access
.. code-block::
   
   ssh -L 1234:localhost:3306 ubuntu@10.129.202.64

Connect to the port with Mysql:
.. code-block::

   mysql -u root -p -P 1234

==============================
Forwarding Multiple Ports
==============================

Example:  Forwarding ports 3306 and 80 back to 1234, 8080
.. code-block::

   ssh -L 1234:localhost:3306 -L 8080:localhost:80 ubuntu@10.129.202.64

==============================
SSH Tunnel over SOCKS Proxy
==============================

Step 1: Create a connection using dynamic port forwarding with:
.. code-block::

   ssh -D 9050 ubuntu@10.129.202.64

Step 2: Configure proxychains to use the tunnel.  Add the port association with the socks4 entry
.. code-block::

   Temen@htb[/htb]$ tail -4 /etc/proxychains.conf

   # meanwile
   # defaults set to "tor"
   socks4 	127.0.0.1 9050

Step 3:  When you start the nmap with proxychains, the packets will route through the 9050 port locally to the ubuntu server.
.. code-block::

   proxychains nmap -v -sn 172.16.5.1-200

**Important Note** proxychains does not understant half open connections like a SYN scan.  It will only error on this.  You will need to do full connect scans using Proxychains.

====================================
Using Metasploit and Proxychains
====================================


